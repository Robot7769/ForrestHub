name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    # Nastavíme Python (bez toho by příkaz "python setup.py --version" nemusel fungovat)
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Install setuptools
    - name: Install setuptools
      run: |
        python -m pip install --upgrade pip
        pip install setuptools

    # Získáme verzi z ForrestHub-app/setup.py
    - name: Get version from setup.py
      id: get_version
      run: |
        cd ForrestHub-app
        echo "VERSION=$(python setup.py --version)" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd ForrestHub-app
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        cd ForrestHub-app
        pyinstaller pyinstaller.spec

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ForrestHub-${{ runner.os }}
        path: ForrestHub-app/dist/ForrestHub*

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # tag_name vychází z tagu, který spustil workflow
        tag_name: ${{ github.ref }}

        # Využijeme env.VERSION (získanou v jobu build-and-release)
        release_name: "Release ${{ env.VERSION }}"
        draft: false
        prerelease: false

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ForrestHub-Windows/ForrestHub.exe
        asset_name: ForrestHub-Windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ForrestHub-macOS/ForrestHub
        asset_name: ForrestHub-macOS
        asset_content_type: application/octet-stream
